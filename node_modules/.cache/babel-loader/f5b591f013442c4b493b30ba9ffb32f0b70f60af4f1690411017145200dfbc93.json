{"ast":null,"code":"import _objectSpread from\"C:/Users/hussa/Desktop/greencart/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import api from'../services/api';import DataTable from'../components/DataTable';import Navigation from'../components/Navigation';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RoutesPage=()=>{const navigate=useNavigate();const[routes,setRoutes]=useState([]);const[editingRoute,setEditingRoute]=useState(null);const[formData,setFormData]=useState({routeId:'',distance:0,trafficLevel:'Low',baseTime:0});const[error,setError]=useState('');useEffect(()=>{fetchRoutes();},[]);const fetchRoutes=async()=>{try{const response=await api.get('/routes');setRoutes(response.data);}catch(error){setError('Failed to fetch routes');}};const handleSubmit=async e=>{e.preventDefault();try{if(editingRoute){await api.put(\"/routes/\".concat(editingRoute._id),formData);}else{await api.post('/routes',formData);}setEditingRoute(null);setFormData({routeId:'',distance:0,trafficLevel:'Low',baseTime:0});fetchRoutes();}catch(error){setError('Failed to save route');}};const handleEdit=route=>{setEditingRoute(route);setFormData({routeId:route.routeId,distance:route.distance,trafficLevel:route.trafficLevel,baseTime:route.baseTime});};const handleDelete=async id=>{if(window.confirm('Are you sure you want to delete this route?')){try{await api.delete(\"/routes/\".concat(id));fetchRoutes();}catch(error){setError('Failed to delete route');}}};const columns=[{key:'routeId',label:'Route ID'},{key:'distance',label:'Distance (km)'},{key:'trafficLevel',label:'Traffic Level'},{key:'baseTime',label:'Base Time (min)'}];return/*#__PURE__*/_jsxs(\"div\",{className:\"routes-page\",children:[/*#__PURE__*/_jsx(Navigation,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),style:{padding:'8px 16px',marginRight:'20px',backgroundColor:'#f0f0f0',border:'1px solid #ddd',borderRadius:'4px',cursor:'pointer'},children:\"\\u2190 Back to Dashboard\"}),/*#__PURE__*/_jsx(\"h2\",{children:editingRoute?'Edit Route':'Add New Route'})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"route-form\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Route ID:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.routeId,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{routeId:e.target.value})),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Distance (km):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:formData.distance,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{distance:parseFloat(e.target.value)})),min:\"0\",step:\"0.1\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Traffic Level:\"}),/*#__PURE__*/_jsxs(\"select\",{value:formData.trafficLevel,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{trafficLevel:e.target.value})),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"Low\",children:\"Low\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:\"High\",children:\"High\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Base Time (minutes):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:formData.baseTime,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{baseTime:parseInt(e.target.value)})),min:\"0\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:editingRoute?'Update Route':'Add Route'}),editingRoute&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>{setEditingRoute(null);setFormData({routeId:'',distance:0,trafficLevel:'Low',baseTime:0});},children:\"Cancel\"})]})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Routes List\"}),/*#__PURE__*/_jsx(DataTable,{data:routes,columns:columns,onEdit:handleEdit,onDelete:handleDelete})]})]});};export default RoutesPage;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","api","DataTable","Navigation","jsx","_jsx","jsxs","_jsxs","RoutesPage","navigate","routes","setRoutes","editingRoute","setEditingRoute","formData","setFormData","routeId","distance","trafficLevel","baseTime","error","setError","fetchRoutes","response","get","data","handleSubmit","e","preventDefault","put","concat","_id","post","handleEdit","route","handleDelete","id","window","confirm","delete","columns","key","label","className","children","style","display","alignItems","marginBottom","onClick","padding","marginRight","backgroundColor","border","borderRadius","cursor","onSubmit","type","value","onChange","_objectSpread","target","required","parseFloat","min","step","parseInt","onEdit","onDelete"],"sources":["C:/Users/hussa/Desktop/greencart/frontend/src/pages/RoutesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport DataTable from '../components/DataTable';\r\nimport Navigation from '../components/Navigation';\r\n\r\nconst RoutesPage = () => {\r\n  const navigate = useNavigate();\r\n  const [routes, setRoutes] = useState([]);\r\n  const [editingRoute, setEditingRoute] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    routeId: '',\r\n    distance: 0,\r\n    trafficLevel: 'Low',\r\n    baseTime: 0,\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchRoutes();\r\n  }, []);\r\n\r\n  const fetchRoutes = async () => {\r\n    try {\r\n      const response = await api.get('/routes');\r\n      setRoutes(response.data);\r\n    } catch (error) {\r\n      setError('Failed to fetch routes');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editingRoute) {\r\n        await api.put(`/routes/${editingRoute._id}`, formData);\r\n      } else {\r\n        await api.post('/routes', formData);\r\n      }\r\n      setEditingRoute(null);\r\n      setFormData({\r\n        routeId: '',\r\n        distance: 0,\r\n        trafficLevel: 'Low',\r\n        baseTime: 0,\r\n      });\r\n      fetchRoutes();\r\n    } catch (error) {\r\n      setError('Failed to save route');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (route) => {\r\n    setEditingRoute(route);\r\n    setFormData({\r\n      routeId: route.routeId,\r\n      distance: route.distance,\r\n      trafficLevel: route.trafficLevel,\r\n      baseTime: route.baseTime,\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this route?')) {\r\n      try {\r\n        await api.delete(`/routes/${id}`);\r\n        fetchRoutes();\r\n      } catch (error) {\r\n        setError('Failed to delete route');\r\n      }\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { key: 'routeId', label: 'Route ID' },\r\n    { key: 'distance', label: 'Distance (km)' },\r\n    { key: 'trafficLevel', label: 'Traffic Level' },\r\n    { key: 'baseTime', label: 'Base Time (min)' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"routes-page\">\r\n      <Navigation />\r\n      <div className=\"content\">\r\n        <div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}>\r\n          <button \r\n            onClick={() => navigate('/')}\r\n            style={{\r\n              padding: '8px 16px',\r\n              marginRight: '20px',\r\n              backgroundColor: '#f0f0f0',\r\n              border: '1px solid #ddd',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            ‚Üê Back to Dashboard\r\n          </button>\r\n          <h2>{editingRoute ? 'Edit Route' : 'Add New Route'}</h2>\r\n        </div>\r\n        {error && <div className=\"error\">{error}</div>}\r\n        \r\n        <form onSubmit={handleSubmit} className=\"route-form\">\r\n          <div>\r\n            <label>Route ID:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.routeId}\r\n              onChange={(e) => setFormData({ ...formData, routeId: e.target.value })}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Distance (km):</label>\r\n            <input\r\n              type=\"number\"\r\n              value={formData.distance}\r\n              onChange={(e) => setFormData({\r\n                ...formData,\r\n                distance: parseFloat(e.target.value)\r\n              })}\r\n              min=\"0\"\r\n              step=\"0.1\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Traffic Level:</label>\r\n            <select\r\n              value={formData.trafficLevel}\r\n              onChange={(e) => setFormData({\r\n                ...formData,\r\n                trafficLevel: e.target.value\r\n              })}\r\n              required\r\n            >\r\n              <option value=\"Low\">Low</option>\r\n              <option value=\"Medium\">Medium</option>\r\n              <option value=\"High\">High</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label>Base Time (minutes):</label>\r\n            <input\r\n              type=\"number\"\r\n              value={formData.baseTime}\r\n              onChange={(e) => setFormData({\r\n                ...formData,\r\n                baseTime: parseInt(e.target.value)\r\n              })}\r\n              min=\"0\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-buttons\">\r\n            <button type=\"submit\">\r\n              {editingRoute ? 'Update Route' : 'Add Route'}\r\n            </button>\r\n            {editingRoute && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setEditingRoute(null);\r\n                  setFormData({\r\n                    routeId: '',\r\n                    distance: 0,\r\n                    trafficLevel: 'Low',\r\n                    baseTime: 0,\r\n                  });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n\r\n        <h2>Routes List</h2>\r\n        <DataTable\r\n          data={routes}\r\n          columns={columns}\r\n          onEdit={handleEdit}\r\n          onDelete={handleDelete}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoutesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}