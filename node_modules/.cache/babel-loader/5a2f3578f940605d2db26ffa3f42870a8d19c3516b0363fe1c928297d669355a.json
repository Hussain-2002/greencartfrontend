{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hussa\\\\Desktop\\\\greencart\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUser = async () => {\n    try {\n      const response = await api.get('/auth/me');\n      setUser(response.data);\n    } catch (error) {\n      localStorage.removeItem('token');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        username,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      if (!token || !user) {\n        throw new Error('Invalid response from server');\n      }\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Login error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Login failed. Please try again.');\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","defaults","headers","common","fetchUser","response","get","data","error","removeItem","login","username","password","post","Error","setItem","success","_error$response","_error$response2","_error$response2$data","console","message","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/hussa/Desktop/greencart/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      fetchUser();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchUser = async () => {\r\n    try {\r\n      const response = await api.get('/auth/me');\r\n      setUser(response.data);\r\n    } catch (error) {\r\n      localStorage.removeItem('token');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { username, password });\r\n      const { token, user } = response.data;\r\n      \r\n      if (!token || !user) {\r\n        throw new Error('Invalid response from server');\r\n      }\r\n\r\n      localStorage.setItem('token', token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setUser(user);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Login error:', error.response?.data || error.message);\r\n      throw new Error(error.response?.data?.error || 'Login failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete api.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}